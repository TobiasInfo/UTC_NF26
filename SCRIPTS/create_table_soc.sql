-- create_tables_SOC.sql
-- Specifity: Only create if not already exists
-- Table R_PART
SELECT * FROM DBC.TablesV WHERE TableName = 'R_PART' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_R_PART;

CREATE TABLE SOC.R_PART (
    PART_ID INTEGER NOT NULL,
    SRC_ID INTEGER NOT NULL,
    SRC_TYP VARCHAR(50) NOT NULL)
    UNIQUE PRIMARY INDEX (PART_ID);

.LABEL OK_R_PART

-- Table R_ROOM
SELECT * FROM DBC.TablesV WHERE TableName = 'R_ROOM' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_R_ROOM;

CREATE TABLE SOC.R_ROOM (
    ROOM_NUM INTEGER NOT NULL,
    ROOM_NAME VARCHAR(20) NOT NULL,
    FLOR_NUM BYTEINT,
    BULD_NAME VARCHAR(20),
    ROOM_TYP VARCHAR(10),
    ROOM_DAY_RATE SMALLINT NOT NULL,
    CRTN_DT DATE NOT NULL,
    EXEC_ID INTEGER NOT NULL)
    UNIQUE PRIMARY INDEX (ROOM_NUM);

.LABEL OK_R_ROOM

-- Table R_MEDC
SELECT * FROM DBC.TablesV WHERE TableName = 'R_MEDC' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_R_MEDC;

CREATE TABLE SOC.R_MEDC (
    MEDC_ID INTEGER NOT NULL,
    MEDC_CD VARCHAR(10) NOT NULL,
    MEDC_NAME VARCHAR(250),
    MEDC_COND VARCHAR(100),
    MEDC_CATG VARCHAR(100) NOT NULL,
    MEDC_BRND VARCHAR(100) NOT NULL,
    EXEC_ID INTEGER NOT NULL)
    UNIQUE PRIMARY INDEX (MEDC_ID);

.LABEL OK_R_MEDC

-- Table O_INDIV
SELECT * FROM DBC.TablesV WHERE TableName = 'O_INDIV' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_O_INDIV; 

CREATE TABLE SOC.O_INDIV (
    PART_ID INTEGER NOT NULL,
    INDV_NAME VARCHAR(100) NOT NULL,
    INDIV_FIRS_NAME VARCHAR(100) NOT NULL,
    INDV_STTS_CD VARCHAR(10) NOT NULL,
    CRTN_DTTM TIMESTAMP(0) NOT NULL,
    UPDT_DTTM TIMESTAMP(0),
    EXEC_ID INTEGER NOT NULL,
    BIRT_DT DATE,
    BIRT_CITY VARCHAR(100),
    BIRT_CNTR VARCHAR(100),
    WRKL_NUM VARCHAR(15))
    UNIQUE PRIMARY INDEX (PART_ID);

.LABEL OK_O_INDIV

-- Table O_STFF
SELECT * FROM DBC.TablesV WHERE TableName = 'O_STFF' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_O_STFF;

CREATE TABLE SOC.O_STFF (
    PART_ID INTEGER NOT NULL,
    WORK_STRT_DTTM TIMESTAMP(0) NOT NULL,
    WORK_END_DTTM TIMESTAMP(0),
    WORK_END_RESN VARCHAR(100),
    EXEC_ID INTEGER NOT NULL) 
    UNIQUE PRIMARY INDEX (PART_ID);

.LABEL OK_O_STFF

-- Table O_TELP
SELECT * FROM DBC.TablesV WHERE TableName = 'O_TELP' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_O_TELP;

CREATE TABLE SOC.O_TELP (
    PART_ID INTEGER NOT NULL,
    CNTR_CD VARCHAR(5),
    TELP_NUM VARCHAR(20) NOT NULL,
    STRT_VALD_DTTM TIMESTAMP(0) NOT NULL,
    END_VALD_DTTM TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL) 
    UNIQUE PRIMARY INDEX (PART_ID);

.LABEL OK_O_TELP

-- Table O_ADDR
SELECT * FROM DBC.TablesV WHERE TableName = 'O_ADDR' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_O_ADDR;

CREATE TABLE SOC.O_ADDR (
    PART_ID INTEGER NOT NULL,
    STRT_NUM VARCHAR(10) NOT NULL,
    STRT_DSC VARCHAR(250) NOT NULL,
    COMP_STRT VARCHAR(250),
    POST_CD VARCHAR(10) NOT NULL,
    CITY_NAME VARCHAR(100),
    CNTR_NAME VARCHAR(100),
    STRT_VALD_DTTM TIMESTAMP(0) NOT NULL,
    END_VALD_DTTM TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL)
    UNIQUE PRIMARY INDEX (PART_ID);

.LABEL OK_O_ADDR

-- Table O_TRET
SELECT * FROM DBC.TablesV WHERE TableName = 'O_TRET' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_O_TRET;

CREATE TABLE SOC.O_TRET (
    TRET_ID BIGINT NOT NULL,
    MEDC_ID INTEGER NOT NULL,
    MEDC_QTY SMALLINT,
    DOSG_DSC VARCHAR(100) NOT NULL,
    CONS_ID BIGINT NOT NULL,
    TRET_CRTN_DTTM TIMESTAMP(0) NOT NULL,
    EXEC_ID INTEGER NOT NULL)
    UNIQUE PRIMARY INDEX (TRET_ID,MEDC_ID);

.LABEL OK_O_TRET

-- Table O_CONS
SELECT * FROM DBC.TablesV WHERE TableName = 'O_CONS' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_O_CONS;

CREATE TABLE SOC.O_CONS (
    CONS_ID BIGINT NOT NULL,
    STFF_ID INTEGER NOT NULL,
    PATN_ID INTEGER NOT NULL,
    PATN_WEGH INTEGER NOT NULL,
    PATN_TEMP INTEGER,
    BLD_PRSS INTEGER,
    DIBT_IND BYTEINT,
    HOSP_IND BYTEINT,
    EXEC_ID INTEGER NOT NULL,
    CONS_STRT_DTTM TIMESTAMP(0) NOT NULL,
    CONS_END_DTTM TIMESTAMP(0) NOT NULL,
    TEMP_UNIT VARCHAR(15),
    PATH_DSC VARCHAR(250),
    TRET_ID BIGINT NOT NULL)
    UNIQUE PRIMARY INDEX (CONS_ID);

.LABEL OK_O_CONS

-- Table O_HOSP
SELECT * FROM DBC.TablesV WHERE TableName = 'O_HOSP' AND DatabaseName = 'SOC';
.IF ACTIVITYCOUNT <> 0 THEN .GOTO OK_O_HOSP;

CREATE TABLE SOC.O_HOSP (
    HOSP_ID BIGINT NOT NULL,
    CONS_ID BIGINT NOT NULL,
    ROOM_NUM INTEGER NOT NULL,
    HOSP_STRT_DTTM TIMESTAMP(0) NOT NULL,
    HOSP_END_DTTM TIMESTAMP(0) NOT NULL,
    HOSP_FINL_RATE DECIMAL(10, 2) NOT NULL,
    STFF_ID INTEGER NOT NULL,
    EXEC_ID INTEGER NOT NULL)
    UNIQUE PRIMARY INDEX (HOSP_ID);

.LABEL OK_O_HOSP